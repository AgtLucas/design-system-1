// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots IconicButton set to disabled 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <GlobalStyleComponent />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NDSProvider__GlobalStyles-f28eoq-0",
              "isStatic": false,
              "lastClassName": "gWUgWA",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "NDSProvider__GlobalStyles",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NDSProvider__GlobalStyles-f28eoq-0",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        theme={
          Object {
            "borders": Array [],
            "breakpoints": Object {
              "extraLarge": "1920px",
              "extraSmall": "0px",
              "large": "1360px",
              "medium": "1024px",
              "small": "768px",
            },
            "colors": Object {
              "black": "#011e38",
              "blackBlue": "#122b47",
              "blue": "#216beb",
              "darkBlue": "#00438f",
              "darkGrey": "#434d59",
              "green": "#008059",
              "grey": "#c0c8d1",
              "lightBlue": "#e1ebfa",
              "lightGreen": "#e9f7f2",
              "lightGrey": "#e4e7eb",
              "lightRed": "#fae6ea",
              "lightYellow": "#fcf5e3",
              "red": "#cc1439",
              "white": "#ffffff",
              "whiteGrey": "#f0f2f5",
              "yellow": "#ffbb00",
            },
            "fontSizes": Object {
              "large": "20px",
              "larger": "26px",
              "largest": "46px",
              "medium": "16px",
              "small": "14px",
              "smaller": "12px",
            },
            "fontWeights": Object {
              "bold": "600",
              "light": "300",
              "medium": "500",
              "normal": "400",
            },
            "fonts": Object {
              "base": "'IBM Plex Sans', sans-serif",
              "mono": "'IBM Plex Mono', monospace",
            },
            "lineHeights": Object {
              "base": "1.5",
              "sectionTitle": "1.23076923",
              "smallTextBase": "1.71428571",
              "smallTextCompressed": "1.14285714",
              "smallerText": "1.33333333",
              "subsectionTitle": "1.2",
              "title": "1.04347826",
            },
            "radii": Object {
              "circle": "50%",
              "medium": "4px",
              "small": "2px",
            },
            "shadows": Object {
              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
            },
            "space": Object {
              "half": "4px",
              "none": "0px",
              "x1": "8px",
              "x2": "16px",
              "x3": "24px",
              "x4": "32px",
              "x5": "40px",
              "x6": "48px",
              "x8": "64px",
            },
            "zIndex": Object {
              "content": 100,
              "overlay": 1000,
              "tabsBar": 210,
              "tabsScollIndicator": 200,
            },
          }
        }
      >
        <div
          className="NDSProvider__GlobalStyles-f28eoq-0 gWUgWA"
        >
          <ThemeProvider
            theme={
              Object {
                "borders": Array [],
                "breakpoints": Object {
                  "extraLarge": "1920px",
                  "extraSmall": "0px",
                  "large": "1360px",
                  "medium": "1024px",
                  "small": "768px",
                },
                "colors": Object {
                  "black": "#011e38",
                  "blackBlue": "#122b47",
                  "blue": "#216beb",
                  "darkBlue": "#00438f",
                  "darkGrey": "#434d59",
                  "green": "#008059",
                  "grey": "#c0c8d1",
                  "lightBlue": "#e1ebfa",
                  "lightGreen": "#e9f7f2",
                  "lightGrey": "#e4e7eb",
                  "lightRed": "#fae6ea",
                  "lightYellow": "#fcf5e3",
                  "red": "#cc1439",
                  "white": "#ffffff",
                  "whiteGrey": "#f0f2f5",
                  "yellow": "#ffbb00",
                },
                "fontSizes": Object {
                  "large": "20px",
                  "larger": "26px",
                  "largest": "46px",
                  "medium": "16px",
                  "small": "14px",
                  "smaller": "12px",
                },
                "fontWeights": Object {
                  "bold": "600",
                  "light": "300",
                  "medium": "500",
                  "normal": "400",
                },
                "fonts": Object {
                  "base": "'IBM Plex Sans', sans-serif",
                  "mono": "'IBM Plex Mono', monospace",
                },
                "lineHeights": Object {
                  "base": "1.5",
                  "sectionTitle": "1.23076923",
                  "smallTextBase": "1.71428571",
                  "smallTextCompressed": "1.14285714",
                  "smallerText": "1.33333333",
                  "subsectionTitle": "1.2",
                  "title": "1.04347826",
                },
                "radii": Object {
                  "circle": "50%",
                  "medium": "4px",
                  "small": "2px",
                },
                "shadows": Object {
                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                },
                "space": Object {
                  "half": "4px",
                  "none": "0px",
                  "x1": "8px",
                  "x2": "16px",
                  "x3": "24px",
                  "x4": "32px",
                  "x5": "40px",
                  "x6": "48px",
                  "x8": "64px",
                },
                "zIndex": Object {
                  "content": 100,
                  "overlay": 1000,
                  "tabsBar": 210,
                  "tabsScollIndicator": 200,
                },
              }
            }
          >
            <Styled(Component)
              disabled={true}
              icon="cancel"
            >
              <StyledComponent
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-gZMcBi",
                      "isStatic": false,
                      "lastClassName": "giNnHm",
                      "rules": Array [],
                    },
                    "displayName": "Styled(Component)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-gZMcBi",
                    "target": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "children": null,
                        "className": undefined,
                        "disabled": false,
                        "labelHidden": false,
                      },
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "disabled": [Function],
                        "icon": [Function],
                        "labelHidden": [Function],
                      },
                      "render": [Function],
                    },
                    "toString": [Function],
                    "usesTheme": false,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                icon="cancel"
              >
                <ForwardRef
                  className="sc-gZMcBi giNnHm"
                  disabled={true}
                  icon="cancel"
                  labelHidden={false}
                >
                  <IconicButton__WrapperButton
                    aria-label="Cancel"
                    className="sc-gZMcBi giNnHm"
                    disabled={true}
                  >
                    <StyledComponent
                      aria-label="Cancel"
                      className="sc-gZMcBi giNnHm"
                      disabled={true}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                            "isStatic": false,
                            "lastClassName": "hlUypq",
                            "rules": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "IconicButton__WrapperButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                          "target": "button",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <button
                        aria-label="Cancel"
                        className="IconicButton__WrapperButton-sc-1u3dojp-1 hlUypq sc-gZMcBi giNnHm"
                        disabled={true}
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Styled(Component)
                                color="currentColor"
                                icon="cancel"
                                p="half"
                                size="32px"
                                title={null}
                              >
                                <StyledComponent
                                  color="currentColor"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "_foldedDefaultProps": Object {
                                        "color": "currentColor",
                                        "size": "24px",
                                        "title": null,
                                      },
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bwzfXH",
                                        "isStatic": false,
                                        "lastClassName": "bbrsYH",
                                        "rules": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "propTypes": Object {
                                        "color": [Function],
                                        "icon": [Function],
                                        "size": [Function],
                                        "title": [Function],
                                      },
                                      "render": [Function],
                                      "styledComponentId": "sc-bwzfXH",
                                      "target": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "defaultProps": Object {
                                          "className": undefined,
                                          "color": "currentColor",
                                          "focusable": false,
                                          "size": "24px",
                                          "title": null,
                                        },
                                        "propTypes": Object {
                                          "className": [Function],
                                          "color": [Function],
                                          "focusable": [Function],
                                          "icon": [Function],
                                          "size": [Function],
                                          "title": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  icon="cancel"
                                  p="half"
                                  size="32px"
                                  title={null}
                                >
                                  <ForwardRef
                                    className="sc-bwzfXH bbrsYH"
                                    color="currentColor"
                                    focusable={false}
                                    icon="cancel"
                                    p="half"
                                    size="32px"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="sc-bwzfXH bbrsYH"
                                      color="currentColor"
                                      fill="currentColor"
                                      focusable={false}
                                      height="32px"
                                      icon="cancel"
                                      p="half"
                                      size="32px"
                                      title={null}
                                      viewBox="0 0 24 24"
                                      width="32px"
                                    >
                                      <path
                                        d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                        key="0"
                                      />
                                    </svg>
                                  </ForwardRef>
                                </StyledComponent>
                              </Styled(Component)>
                            </InnerReference>
                          </Reference>
                          <Popper
                            modifiers={
                              Object {
                                "preventOverflow": Object {
                                  "boundariesElement": "viewport",
                                  "enabled": true,
                                  "padding": 8,
                                },
                              }
                            }
                            placement="bottom"
                          >
                            <InnerPopper
                              eventsEnabled={true}
                              modifiers={
                                Object {
                                  "preventOverflow": Object {
                                    "boundariesElement": "viewport",
                                    "enabled": true,
                                    "padding": 8,
                                  },
                                }
                              }
                              placement="bottom"
                              positionFixed={false}
                              referenceElement={
                                <svg
                                  aria-hidden="true"
                                  class="sc-bwzfXH bbrsYH"
                                  color="currentColor"
                                  fill="currentColor"
                                  focusable="false"
                                  height="32px"
                                  icon="cancel"
                                  p="half"
                                  viewBox="0 0 24 24"
                                  width="32px"
                                >
                                  <path
                                    d="M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z"
                                  />
                                </svg>
                              }
                            />
                          </Popper>
                        </Manager>
                        <styled.p
                          color="currentColor"
                          disabled={false}
                          fontSize="16px"
                          inline={false}
                          lineHeight="1.5"
                          m={0}
                          ml="half"
                          mr="half"
                        >
                          <StyledComponent
                            color="currentColor"
                            disabled={false}
                            fontSize="16px"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "_foldedDefaultProps": Object {
                                  "color": "currentColor",
                                  "disabled": false,
                                  "fontSize": "16px",
                                  "inline": false,
                                  "lineHeight": "1.5",
                                  "m": 0,
                                },
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": false,
                                  "lastClassName": "jtAKLH",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.p",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "disabled": [Function],
                                  "inline": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "p",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={false}
                            lineHeight="1.5"
                            m={0}
                            ml="half"
                            mr="half"
                          >
                            <p
                              className="sc-bxivhb jtAKLH"
                              color="currentColor"
                              disabled={false}
                              fontSize="16px"
                            >
                              Cancel
                            </p>
                          </StyledComponent>
                        </styled.p>
                      </button>
                    </StyledComponent>
                  </IconicButton__WrapperButton>
                </ForwardRef>
              </StyledComponent>
            </Styled(Component)>
            <Styled(Component)
              disabled={true}
              icon="lock"
            >
              <StyledComponent
                disabled={true}
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-gZMcBi",
                      "isStatic": false,
                      "lastClassName": "giNnHm",
                      "rules": Array [],
                    },
                    "displayName": "Styled(Component)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-gZMcBi",
                    "target": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "children": null,
                        "className": undefined,
                        "disabled": false,
                        "labelHidden": false,
                      },
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "disabled": [Function],
                        "icon": [Function],
                        "labelHidden": [Function],
                      },
                      "render": [Function],
                    },
                    "toString": [Function],
                    "usesTheme": false,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                icon="lock"
              >
                <ForwardRef
                  className="sc-gZMcBi giNnHm"
                  disabled={true}
                  icon="lock"
                  labelHidden={false}
                >
                  <IconicButton__WrapperButton
                    aria-label="Lock"
                    className="sc-gZMcBi giNnHm"
                    disabled={true}
                  >
                    <StyledComponent
                      aria-label="Lock"
                      className="sc-gZMcBi giNnHm"
                      disabled={true}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                            "isStatic": false,
                            "lastClassName": "hlUypq",
                            "rules": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "IconicButton__WrapperButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                          "target": "button",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <button
                        aria-label="Lock"
                        className="IconicButton__WrapperButton-sc-1u3dojp-1 hlUypq sc-gZMcBi giNnHm"
                        disabled={true}
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Styled(Component)
                                color="currentColor"
                                icon="lock"
                                p="half"
                                size="32px"
                                title={null}
                              >
                                <StyledComponent
                                  color="currentColor"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "_foldedDefaultProps": Object {
                                        "color": "currentColor",
                                        "size": "24px",
                                        "title": null,
                                      },
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bwzfXH",
                                        "isStatic": false,
                                        "lastClassName": "bbrsYH",
                                        "rules": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "propTypes": Object {
                                        "color": [Function],
                                        "icon": [Function],
                                        "size": [Function],
                                        "title": [Function],
                                      },
                                      "render": [Function],
                                      "styledComponentId": "sc-bwzfXH",
                                      "target": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "defaultProps": Object {
                                          "className": undefined,
                                          "color": "currentColor",
                                          "focusable": false,
                                          "size": "24px",
                                          "title": null,
                                        },
                                        "propTypes": Object {
                                          "className": [Function],
                                          "color": [Function],
                                          "focusable": [Function],
                                          "icon": [Function],
                                          "size": [Function],
                                          "title": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  icon="lock"
                                  p="half"
                                  size="32px"
                                  title={null}
                                >
                                  <ForwardRef
                                    className="sc-bwzfXH bbrsYH"
                                    color="currentColor"
                                    focusable={false}
                                    icon="lock"
                                    p="half"
                                    size="32px"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="sc-bwzfXH bbrsYH"
                                      color="currentColor"
                                      fill="currentColor"
                                      focusable={false}
                                      height="32px"
                                      icon="lock"
                                      p="half"
                                      size="32px"
                                      title={null}
                                      viewBox="0 0 24 24"
                                      width="32px"
                                    >
                                      <path
                                        d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"
                                        key="0"
                                      />
                                    </svg>
                                  </ForwardRef>
                                </StyledComponent>
                              </Styled(Component)>
                            </InnerReference>
                          </Reference>
                          <Popper
                            modifiers={
                              Object {
                                "preventOverflow": Object {
                                  "boundariesElement": "viewport",
                                  "enabled": true,
                                  "padding": 8,
                                },
                              }
                            }
                            placement="bottom"
                          >
                            <InnerPopper
                              eventsEnabled={true}
                              modifiers={
                                Object {
                                  "preventOverflow": Object {
                                    "boundariesElement": "viewport",
                                    "enabled": true,
                                    "padding": 8,
                                  },
                                }
                              }
                              placement="bottom"
                              positionFixed={false}
                              referenceElement={
                                <svg
                                  aria-hidden="true"
                                  class="sc-bwzfXH bbrsYH"
                                  color="currentColor"
                                  fill="currentColor"
                                  focusable="false"
                                  height="32px"
                                  icon="lock"
                                  p="half"
                                  viewBox="0 0 24 24"
                                  width="32px"
                                >
                                  <path
                                    d="M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z"
                                  />
                                </svg>
                              }
                            />
                          </Popper>
                        </Manager>
                        <styled.p
                          color="currentColor"
                          disabled={false}
                          fontSize="16px"
                          inline={false}
                          lineHeight="1.5"
                          m={0}
                          ml="half"
                          mr="half"
                        >
                          <StyledComponent
                            color="currentColor"
                            disabled={false}
                            fontSize="16px"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "_foldedDefaultProps": Object {
                                  "color": "currentColor",
                                  "disabled": false,
                                  "fontSize": "16px",
                                  "inline": false,
                                  "lineHeight": "1.5",
                                  "m": 0,
                                },
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": false,
                                  "lastClassName": "jtAKLH",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.p",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "disabled": [Function],
                                  "inline": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "p",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={false}
                            lineHeight="1.5"
                            m={0}
                            ml="half"
                            mr="half"
                          >
                            <p
                              className="sc-bxivhb jtAKLH"
                              color="currentColor"
                              disabled={false}
                              fontSize="16px"
                            >
                              Lock
                            </p>
                          </StyledComponent>
                        </styled.p>
                      </button>
                    </StyledComponent>
                  </IconicButton__WrapperButton>
                </ForwardRef>
              </StyledComponent>
            </Styled(Component)>
          </ThemeProvider>
        </div>
      </StyledComponent>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots IconicButton with a hidden label 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <GlobalStyleComponent />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NDSProvider__GlobalStyles-f28eoq-0",
              "isStatic": false,
              "lastClassName": "gWUgWA",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "NDSProvider__GlobalStyles",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NDSProvider__GlobalStyles-f28eoq-0",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        theme={
          Object {
            "borders": Array [],
            "breakpoints": Object {
              "extraLarge": "1920px",
              "extraSmall": "0px",
              "large": "1360px",
              "medium": "1024px",
              "small": "768px",
            },
            "colors": Object {
              "black": "#011e38",
              "blackBlue": "#122b47",
              "blue": "#216beb",
              "darkBlue": "#00438f",
              "darkGrey": "#434d59",
              "green": "#008059",
              "grey": "#c0c8d1",
              "lightBlue": "#e1ebfa",
              "lightGreen": "#e9f7f2",
              "lightGrey": "#e4e7eb",
              "lightRed": "#fae6ea",
              "lightYellow": "#fcf5e3",
              "red": "#cc1439",
              "white": "#ffffff",
              "whiteGrey": "#f0f2f5",
              "yellow": "#ffbb00",
            },
            "fontSizes": Object {
              "large": "20px",
              "larger": "26px",
              "largest": "46px",
              "medium": "16px",
              "small": "14px",
              "smaller": "12px",
            },
            "fontWeights": Object {
              "bold": "600",
              "light": "300",
              "medium": "500",
              "normal": "400",
            },
            "fonts": Object {
              "base": "'IBM Plex Sans', sans-serif",
              "mono": "'IBM Plex Mono', monospace",
            },
            "lineHeights": Object {
              "base": "1.5",
              "sectionTitle": "1.23076923",
              "smallTextBase": "1.71428571",
              "smallTextCompressed": "1.14285714",
              "smallerText": "1.33333333",
              "subsectionTitle": "1.2",
              "title": "1.04347826",
            },
            "radii": Object {
              "circle": "50%",
              "medium": "4px",
              "small": "2px",
            },
            "shadows": Object {
              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
            },
            "space": Object {
              "half": "4px",
              "none": "0px",
              "x1": "8px",
              "x2": "16px",
              "x3": "24px",
              "x4": "32px",
              "x5": "40px",
              "x6": "48px",
              "x8": "64px",
            },
            "zIndex": Object {
              "content": 100,
              "overlay": 1000,
              "tabsBar": 210,
              "tabsScollIndicator": 200,
            },
          }
        }
      >
        <div
          className="NDSProvider__GlobalStyles-f28eoq-0 gWUgWA"
        >
          <ThemeProvider
            theme={
              Object {
                "borders": Array [],
                "breakpoints": Object {
                  "extraLarge": "1920px",
                  "extraSmall": "0px",
                  "large": "1360px",
                  "medium": "1024px",
                  "small": "768px",
                },
                "colors": Object {
                  "black": "#011e38",
                  "blackBlue": "#122b47",
                  "blue": "#216beb",
                  "darkBlue": "#00438f",
                  "darkGrey": "#434d59",
                  "green": "#008059",
                  "grey": "#c0c8d1",
                  "lightBlue": "#e1ebfa",
                  "lightGreen": "#e9f7f2",
                  "lightGrey": "#e4e7eb",
                  "lightRed": "#fae6ea",
                  "lightYellow": "#fcf5e3",
                  "red": "#cc1439",
                  "white": "#ffffff",
                  "whiteGrey": "#f0f2f5",
                  "yellow": "#ffbb00",
                },
                "fontSizes": Object {
                  "large": "20px",
                  "larger": "26px",
                  "largest": "46px",
                  "medium": "16px",
                  "small": "14px",
                  "smaller": "12px",
                },
                "fontWeights": Object {
                  "bold": "600",
                  "light": "300",
                  "medium": "500",
                  "normal": "400",
                },
                "fonts": Object {
                  "base": "'IBM Plex Sans', sans-serif",
                  "mono": "'IBM Plex Mono', monospace",
                },
                "lineHeights": Object {
                  "base": "1.5",
                  "sectionTitle": "1.23076923",
                  "smallTextBase": "1.71428571",
                  "smallTextCompressed": "1.14285714",
                  "smallerText": "1.33333333",
                  "subsectionTitle": "1.2",
                  "title": "1.04347826",
                },
                "radii": Object {
                  "circle": "50%",
                  "medium": "4px",
                  "small": "2px",
                },
                "shadows": Object {
                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                },
                "space": Object {
                  "half": "4px",
                  "none": "0px",
                  "x1": "8px",
                  "x2": "16px",
                  "x3": "24px",
                  "x4": "32px",
                  "x5": "40px",
                  "x6": "48px",
                  "x8": "64px",
                },
                "zIndex": Object {
                  "content": 100,
                  "overlay": 1000,
                  "tabsBar": 210,
                  "tabsScollIndicator": 200,
                },
              }
            }
          >
            <Styled(Component)
              icon="user"
              labelHidden={true}
              ml="x6"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-gZMcBi",
                      "isStatic": false,
                      "lastClassName": "giNnHm",
                      "rules": Array [],
                    },
                    "displayName": "Styled(Component)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-gZMcBi",
                    "target": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "children": null,
                        "className": undefined,
                        "disabled": false,
                        "labelHidden": false,
                      },
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "disabled": [Function],
                        "icon": [Function],
                        "labelHidden": [Function],
                      },
                      "render": [Function],
                    },
                    "toString": [Function],
                    "usesTheme": false,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                icon="user"
                labelHidden={true}
                ml="x6"
              >
                <ForwardRef
                  className="sc-gZMcBi giNnHm"
                  disabled={false}
                  icon="user"
                  labelHidden={true}
                  ml="x6"
                >
                  <IconicButton__WrapperButton
                    aria-label="Hidden Label"
                    className="sc-gZMcBi giNnHm"
                    disabled={false}
                    ml="x6"
                  >
                    <StyledComponent
                      aria-label="Hidden Label"
                      className="sc-gZMcBi giNnHm"
                      disabled={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                            "isStatic": false,
                            "lastClassName": "efCMEx",
                            "rules": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "IconicButton__WrapperButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                          "target": "button",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      ml="x6"
                    >
                      <button
                        aria-label="Hidden Label"
                        className="IconicButton__WrapperButton-sc-1u3dojp-1 efCMEx sc-gZMcBi giNnHm"
                        disabled={false}
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Styled(Component)
                                color="currentColor"
                                icon="user"
                                p="half"
                                size="32px"
                                title={null}
                              >
                                <StyledComponent
                                  color="currentColor"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "_foldedDefaultProps": Object {
                                        "color": "currentColor",
                                        "size": "24px",
                                        "title": null,
                                      },
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bwzfXH",
                                        "isStatic": false,
                                        "lastClassName": "bbrsYH",
                                        "rules": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "propTypes": Object {
                                        "color": [Function],
                                        "icon": [Function],
                                        "size": [Function],
                                        "title": [Function],
                                      },
                                      "render": [Function],
                                      "styledComponentId": "sc-bwzfXH",
                                      "target": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "defaultProps": Object {
                                          "className": undefined,
                                          "color": "currentColor",
                                          "focusable": false,
                                          "size": "24px",
                                          "title": null,
                                        },
                                        "propTypes": Object {
                                          "className": [Function],
                                          "color": [Function],
                                          "focusable": [Function],
                                          "icon": [Function],
                                          "size": [Function],
                                          "title": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  icon="user"
                                  p="half"
                                  size="32px"
                                  title={null}
                                >
                                  <ForwardRef
                                    className="sc-bwzfXH bbrsYH"
                                    color="currentColor"
                                    focusable={false}
                                    icon="user"
                                    p="half"
                                    size="32px"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="sc-bwzfXH bbrsYH"
                                      color="currentColor"
                                      fill="currentColor"
                                      focusable={false}
                                      height="32px"
                                      icon="user"
                                      p="half"
                                      size="32px"
                                      title={null}
                                      viewBox="0 0 24 24"
                                      width="32px"
                                    >
                                      <path
                                        d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                        key="0"
                                      />
                                    </svg>
                                  </ForwardRef>
                                </StyledComponent>
                              </Styled(Component)>
                            </InnerReference>
                          </Reference>
                          <Popper
                            modifiers={
                              Object {
                                "preventOverflow": Object {
                                  "boundariesElement": "viewport",
                                  "enabled": true,
                                  "padding": 8,
                                },
                              }
                            }
                            placement="bottom"
                          >
                            <InnerPopper
                              eventsEnabled={true}
                              modifiers={
                                Object {
                                  "preventOverflow": Object {
                                    "boundariesElement": "viewport",
                                    "enabled": true,
                                    "padding": 8,
                                  },
                                }
                              }
                              placement="bottom"
                              positionFixed={false}
                              referenceElement={
                                <svg
                                  aria-hidden="true"
                                  class="sc-bwzfXH bbrsYH"
                                  color="currentColor"
                                  fill="currentColor"
                                  focusable="false"
                                  height="32px"
                                  icon="user"
                                  p="half"
                                  viewBox="0 0 24 24"
                                  width="32px"
                                >
                                  <path
                                    d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                  />
                                </svg>
                              }
                            >
                              <IconicButton__HoverText
                                style={
                                  Object {
                                    "left": 0,
                                    "opacity": 0,
                                    "pointerEvents": "none",
                                    "position": "absolute",
                                    "top": 0,
                                  }
                                }
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "IconicButton__HoverText-sc-1u3dojp-0",
                                        "isStatic": false,
                                        "lastClassName": "bCzVsh",
                                        "rules": Array [
                                          "white-space: nowrap;",
                                          "font-size: 14px;",
                                          "line-height: 1.14285714;",
                                          "color: #f0f2f5;",
                                          "background-color: rgba(18,43,71,0.85);",
                                          "border-radius: 4px;",
                                          "margin-top: 4px;",
                                          "padding: 4px 8px;",
                                          "pointer-events: none;",
                                        ],
                                      },
                                      "displayName": "IconicButton__HoverText",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "IconicButton__HoverText-sc-1u3dojp-0",
                                      "target": "div",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  style={
                                    Object {
                                      "left": 0,
                                      "opacity": 0,
                                      "pointerEvents": "none",
                                      "position": "absolute",
                                      "top": 0,
                                    }
                                  }
                                >
                                  <div
                                    className="IconicButton__HoverText-sc-1u3dojp-0 bCzVsh"
                                    style={
                                      Object {
                                        "left": 0,
                                        "opacity": 0,
                                        "pointerEvents": "none",
                                        "position": "absolute",
                                        "top": 0,
                                      }
                                    }
                                  >
                                    Hidden Label
                                  </div>
                                </StyledComponent>
                              </IconicButton__HoverText>
                            </InnerPopper>
                          </Popper>
                        </Manager>
                      </button>
                    </StyledComponent>
                  </IconicButton__WrapperButton>
                </ForwardRef>
              </StyledComponent>
            </Styled(Component)>
          </ThemeProvider>
        </div>
      </StyledComponent>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots IconicButton with a long label 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <GlobalStyleComponent />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NDSProvider__GlobalStyles-f28eoq-0",
              "isStatic": false,
              "lastClassName": "gWUgWA",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "NDSProvider__GlobalStyles",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NDSProvider__GlobalStyles-f28eoq-0",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        theme={
          Object {
            "borders": Array [],
            "breakpoints": Object {
              "extraLarge": "1920px",
              "extraSmall": "0px",
              "large": "1360px",
              "medium": "1024px",
              "small": "768px",
            },
            "colors": Object {
              "black": "#011e38",
              "blackBlue": "#122b47",
              "blue": "#216beb",
              "darkBlue": "#00438f",
              "darkGrey": "#434d59",
              "green": "#008059",
              "grey": "#c0c8d1",
              "lightBlue": "#e1ebfa",
              "lightGreen": "#e9f7f2",
              "lightGrey": "#e4e7eb",
              "lightRed": "#fae6ea",
              "lightYellow": "#fcf5e3",
              "red": "#cc1439",
              "white": "#ffffff",
              "whiteGrey": "#f0f2f5",
              "yellow": "#ffbb00",
            },
            "fontSizes": Object {
              "large": "20px",
              "larger": "26px",
              "largest": "46px",
              "medium": "16px",
              "small": "14px",
              "smaller": "12px",
            },
            "fontWeights": Object {
              "bold": "600",
              "light": "300",
              "medium": "500",
              "normal": "400",
            },
            "fonts": Object {
              "base": "'IBM Plex Sans', sans-serif",
              "mono": "'IBM Plex Mono', monospace",
            },
            "lineHeights": Object {
              "base": "1.5",
              "sectionTitle": "1.23076923",
              "smallTextBase": "1.71428571",
              "smallTextCompressed": "1.14285714",
              "smallerText": "1.33333333",
              "subsectionTitle": "1.2",
              "title": "1.04347826",
            },
            "radii": Object {
              "circle": "50%",
              "medium": "4px",
              "small": "2px",
            },
            "shadows": Object {
              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
            },
            "space": Object {
              "half": "4px",
              "none": "0px",
              "x1": "8px",
              "x2": "16px",
              "x3": "24px",
              "x4": "32px",
              "x5": "40px",
              "x6": "48px",
              "x8": "64px",
            },
            "zIndex": Object {
              "content": 100,
              "overlay": 1000,
              "tabsBar": 210,
              "tabsScollIndicator": 200,
            },
          }
        }
      >
        <div
          className="NDSProvider__GlobalStyles-f28eoq-0 gWUgWA"
        >
          <ThemeProvider
            theme={
              Object {
                "borders": Array [],
                "breakpoints": Object {
                  "extraLarge": "1920px",
                  "extraSmall": "0px",
                  "large": "1360px",
                  "medium": "1024px",
                  "small": "768px",
                },
                "colors": Object {
                  "black": "#011e38",
                  "blackBlue": "#122b47",
                  "blue": "#216beb",
                  "darkBlue": "#00438f",
                  "darkGrey": "#434d59",
                  "green": "#008059",
                  "grey": "#c0c8d1",
                  "lightBlue": "#e1ebfa",
                  "lightGreen": "#e9f7f2",
                  "lightGrey": "#e4e7eb",
                  "lightRed": "#fae6ea",
                  "lightYellow": "#fcf5e3",
                  "red": "#cc1439",
                  "white": "#ffffff",
                  "whiteGrey": "#f0f2f5",
                  "yellow": "#ffbb00",
                },
                "fontSizes": Object {
                  "large": "20px",
                  "larger": "26px",
                  "largest": "46px",
                  "medium": "16px",
                  "small": "14px",
                  "smaller": "12px",
                },
                "fontWeights": Object {
                  "bold": "600",
                  "light": "300",
                  "medium": "500",
                  "normal": "400",
                },
                "fonts": Object {
                  "base": "'IBM Plex Sans', sans-serif",
                  "mono": "'IBM Plex Mono', monospace",
                },
                "lineHeights": Object {
                  "base": "1.5",
                  "sectionTitle": "1.23076923",
                  "smallTextBase": "1.71428571",
                  "smallTextCompressed": "1.14285714",
                  "smallerText": "1.33333333",
                  "subsectionTitle": "1.2",
                  "title": "1.04347826",
                },
                "radii": Object {
                  "circle": "50%",
                  "medium": "4px",
                  "small": "2px",
                },
                "shadows": Object {
                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                },
                "space": Object {
                  "half": "4px",
                  "none": "0px",
                  "x1": "8px",
                  "x2": "16px",
                  "x3": "24px",
                  "x4": "32px",
                  "x5": "40px",
                  "x6": "48px",
                  "x8": "64px",
                },
                "zIndex": Object {
                  "content": 100,
                  "overlay": 1000,
                  "tabsBar": 210,
                  "tabsScollIndicator": 200,
                },
              }
            }
          >
            <Styled(Component)
              icon="user"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-gZMcBi",
                      "isStatic": false,
                      "lastClassName": "giNnHm",
                      "rules": Array [],
                    },
                    "displayName": "Styled(Component)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-gZMcBi",
                    "target": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "children": null,
                        "className": undefined,
                        "disabled": false,
                        "labelHidden": false,
                      },
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "disabled": [Function],
                        "icon": [Function],
                        "labelHidden": [Function],
                      },
                      "render": [Function],
                    },
                    "toString": [Function],
                    "usesTheme": false,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                icon="user"
              >
                <ForwardRef
                  className="sc-gZMcBi giNnHm"
                  disabled={false}
                  icon="user"
                  labelHidden={false}
                >
                  <IconicButton__WrapperButton
                    aria-label="I am an Iconic Button with a really really really long label"
                    className="sc-gZMcBi giNnHm"
                    disabled={false}
                  >
                    <StyledComponent
                      aria-label="I am an Iconic Button with a really really really long label"
                      className="sc-gZMcBi giNnHm"
                      disabled={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                            "isStatic": false,
                            "lastClassName": "dmBfBQ",
                            "rules": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "IconicButton__WrapperButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                          "target": "button",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <button
                        aria-label="I am an Iconic Button with a really really really long label"
                        className="IconicButton__WrapperButton-sc-1u3dojp-1 dmBfBQ sc-gZMcBi giNnHm"
                        disabled={false}
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Styled(Component)
                                color="currentColor"
                                icon="user"
                                p="half"
                                size="32px"
                                title={null}
                              >
                                <StyledComponent
                                  color="currentColor"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "_foldedDefaultProps": Object {
                                        "color": "currentColor",
                                        "size": "24px",
                                        "title": null,
                                      },
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bwzfXH",
                                        "isStatic": false,
                                        "lastClassName": "bbrsYH",
                                        "rules": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "propTypes": Object {
                                        "color": [Function],
                                        "icon": [Function],
                                        "size": [Function],
                                        "title": [Function],
                                      },
                                      "render": [Function],
                                      "styledComponentId": "sc-bwzfXH",
                                      "target": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "defaultProps": Object {
                                          "className": undefined,
                                          "color": "currentColor",
                                          "focusable": false,
                                          "size": "24px",
                                          "title": null,
                                        },
                                        "propTypes": Object {
                                          "className": [Function],
                                          "color": [Function],
                                          "focusable": [Function],
                                          "icon": [Function],
                                          "size": [Function],
                                          "title": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  icon="user"
                                  p="half"
                                  size="32px"
                                  title={null}
                                >
                                  <ForwardRef
                                    className="sc-bwzfXH bbrsYH"
                                    color="currentColor"
                                    focusable={false}
                                    icon="user"
                                    p="half"
                                    size="32px"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="sc-bwzfXH bbrsYH"
                                      color="currentColor"
                                      fill="currentColor"
                                      focusable={false}
                                      height="32px"
                                      icon="user"
                                      p="half"
                                      size="32px"
                                      title={null}
                                      viewBox="0 0 24 24"
                                      width="32px"
                                    >
                                      <path
                                        d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                        key="0"
                                      />
                                    </svg>
                                  </ForwardRef>
                                </StyledComponent>
                              </Styled(Component)>
                            </InnerReference>
                          </Reference>
                          <Popper
                            modifiers={
                              Object {
                                "preventOverflow": Object {
                                  "boundariesElement": "viewport",
                                  "enabled": true,
                                  "padding": 8,
                                },
                              }
                            }
                            placement="bottom"
                          >
                            <InnerPopper
                              eventsEnabled={true}
                              modifiers={
                                Object {
                                  "preventOverflow": Object {
                                    "boundariesElement": "viewport",
                                    "enabled": true,
                                    "padding": 8,
                                  },
                                }
                              }
                              placement="bottom"
                              positionFixed={false}
                              referenceElement={
                                <svg
                                  aria-hidden="true"
                                  class="sc-bwzfXH bbrsYH"
                                  color="currentColor"
                                  fill="currentColor"
                                  focusable="false"
                                  height="32px"
                                  icon="user"
                                  p="half"
                                  viewBox="0 0 24 24"
                                  width="32px"
                                >
                                  <path
                                    d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
                                  />
                                </svg>
                              }
                            />
                          </Popper>
                        </Manager>
                        <styled.p
                          color="currentColor"
                          disabled={false}
                          fontSize="16px"
                          inline={false}
                          lineHeight="1.5"
                          m={0}
                          ml="half"
                          mr="half"
                        >
                          <StyledComponent
                            color="currentColor"
                            disabled={false}
                            fontSize="16px"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "_foldedDefaultProps": Object {
                                  "color": "currentColor",
                                  "disabled": false,
                                  "fontSize": "16px",
                                  "inline": false,
                                  "lineHeight": "1.5",
                                  "m": 0,
                                },
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": false,
                                  "lastClassName": "jtAKLH",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.p",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "disabled": [Function],
                                  "inline": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "p",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={false}
                            lineHeight="1.5"
                            m={0}
                            ml="half"
                            mr="half"
                          >
                            <p
                              className="sc-bxivhb jtAKLH"
                              color="currentColor"
                              disabled={false}
                              fontSize="16px"
                            >
                              I am an Iconic Button with a really really really long label
                            </p>
                          </StyledComponent>
                        </styled.p>
                      </button>
                    </StyledComponent>
                  </IconicButton__WrapperButton>
                </ForwardRef>
              </StyledComponent>
            </Styled(Component)>
          </ThemeProvider>
        </div>
      </StyledComponent>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots IconicButton with label 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <GlobalStyleComponent />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NDSProvider__GlobalStyles-f28eoq-0",
              "isStatic": false,
              "lastClassName": "gWUgWA",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "NDSProvider__GlobalStyles",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NDSProvider__GlobalStyles-f28eoq-0",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        theme={
          Object {
            "borders": Array [],
            "breakpoints": Object {
              "extraLarge": "1920px",
              "extraSmall": "0px",
              "large": "1360px",
              "medium": "1024px",
              "small": "768px",
            },
            "colors": Object {
              "black": "#011e38",
              "blackBlue": "#122b47",
              "blue": "#216beb",
              "darkBlue": "#00438f",
              "darkGrey": "#434d59",
              "green": "#008059",
              "grey": "#c0c8d1",
              "lightBlue": "#e1ebfa",
              "lightGreen": "#e9f7f2",
              "lightGrey": "#e4e7eb",
              "lightRed": "#fae6ea",
              "lightYellow": "#fcf5e3",
              "red": "#cc1439",
              "white": "#ffffff",
              "whiteGrey": "#f0f2f5",
              "yellow": "#ffbb00",
            },
            "fontSizes": Object {
              "large": "20px",
              "larger": "26px",
              "largest": "46px",
              "medium": "16px",
              "small": "14px",
              "smaller": "12px",
            },
            "fontWeights": Object {
              "bold": "600",
              "light": "300",
              "medium": "500",
              "normal": "400",
            },
            "fonts": Object {
              "base": "'IBM Plex Sans', sans-serif",
              "mono": "'IBM Plex Mono', monospace",
            },
            "lineHeights": Object {
              "base": "1.5",
              "sectionTitle": "1.23076923",
              "smallTextBase": "1.71428571",
              "smallTextCompressed": "1.14285714",
              "smallerText": "1.33333333",
              "subsectionTitle": "1.2",
              "title": "1.04347826",
            },
            "radii": Object {
              "circle": "50%",
              "medium": "4px",
              "small": "2px",
            },
            "shadows": Object {
              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
            },
            "space": Object {
              "half": "4px",
              "none": "0px",
              "x1": "8px",
              "x2": "16px",
              "x3": "24px",
              "x4": "32px",
              "x5": "40px",
              "x6": "48px",
              "x8": "64px",
            },
            "zIndex": Object {
              "content": 100,
              "overlay": 1000,
              "tabsBar": 210,
              "tabsScollIndicator": 200,
            },
          }
        }
      >
        <div
          className="NDSProvider__GlobalStyles-f28eoq-0 gWUgWA"
        >
          <ThemeProvider
            theme={
              Object {
                "borders": Array [],
                "breakpoints": Object {
                  "extraLarge": "1920px",
                  "extraSmall": "0px",
                  "large": "1360px",
                  "medium": "1024px",
                  "small": "768px",
                },
                "colors": Object {
                  "black": "#011e38",
                  "blackBlue": "#122b47",
                  "blue": "#216beb",
                  "darkBlue": "#00438f",
                  "darkGrey": "#434d59",
                  "green": "#008059",
                  "grey": "#c0c8d1",
                  "lightBlue": "#e1ebfa",
                  "lightGreen": "#e9f7f2",
                  "lightGrey": "#e4e7eb",
                  "lightRed": "#fae6ea",
                  "lightYellow": "#fcf5e3",
                  "red": "#cc1439",
                  "white": "#ffffff",
                  "whiteGrey": "#f0f2f5",
                  "yellow": "#ffbb00",
                },
                "fontSizes": Object {
                  "large": "20px",
                  "larger": "26px",
                  "largest": "46px",
                  "medium": "16px",
                  "small": "14px",
                  "smaller": "12px",
                },
                "fontWeights": Object {
                  "bold": "600",
                  "light": "300",
                  "medium": "500",
                  "normal": "400",
                },
                "fonts": Object {
                  "base": "'IBM Plex Sans', sans-serif",
                  "mono": "'IBM Plex Mono', monospace",
                },
                "lineHeights": Object {
                  "base": "1.5",
                  "sectionTitle": "1.23076923",
                  "smallTextBase": "1.71428571",
                  "smallTextCompressed": "1.14285714",
                  "smallerText": "1.33333333",
                  "subsectionTitle": "1.2",
                  "title": "1.04347826",
                },
                "radii": Object {
                  "circle": "50%",
                  "medium": "4px",
                  "small": "2px",
                },
                "shadows": Object {
                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                },
                "space": Object {
                  "half": "4px",
                  "none": "0px",
                  "x1": "8px",
                  "x2": "16px",
                  "x3": "24px",
                  "x4": "32px",
                  "x5": "40px",
                  "x6": "48px",
                  "x8": "64px",
                },
                "zIndex": Object {
                  "content": 100,
                  "overlay": 1000,
                  "tabsBar": 210,
                  "tabsScollIndicator": 200,
                },
              }
            }
          >
            <Styled(Component)
              icon="delete"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-gZMcBi",
                      "isStatic": false,
                      "lastClassName": "giNnHm",
                      "rules": Array [],
                    },
                    "displayName": "Styled(Component)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-gZMcBi",
                    "target": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "children": null,
                        "className": undefined,
                        "disabled": false,
                        "labelHidden": false,
                      },
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "disabled": [Function],
                        "icon": [Function],
                        "labelHidden": [Function],
                      },
                      "render": [Function],
                    },
                    "toString": [Function],
                    "usesTheme": false,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                icon="delete"
              >
                <ForwardRef
                  className="sc-gZMcBi giNnHm"
                  disabled={false}
                  icon="delete"
                  labelHidden={false}
                >
                  <IconicButton__WrapperButton
                    aria-label="Delete"
                    className="sc-gZMcBi giNnHm"
                    disabled={false}
                  >
                    <StyledComponent
                      aria-label="Delete"
                      className="sc-gZMcBi giNnHm"
                      disabled={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                            "isStatic": false,
                            "lastClassName": "dmBfBQ",
                            "rules": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "IconicButton__WrapperButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                          "target": "button",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <button
                        aria-label="Delete"
                        className="IconicButton__WrapperButton-sc-1u3dojp-1 dmBfBQ sc-gZMcBi giNnHm"
                        disabled={false}
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Styled(Component)
                                color="currentColor"
                                icon="delete"
                                p="half"
                                size="32px"
                                title={null}
                              >
                                <StyledComponent
                                  color="currentColor"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "_foldedDefaultProps": Object {
                                        "color": "currentColor",
                                        "size": "24px",
                                        "title": null,
                                      },
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bwzfXH",
                                        "isStatic": false,
                                        "lastClassName": "bbrsYH",
                                        "rules": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "propTypes": Object {
                                        "color": [Function],
                                        "icon": [Function],
                                        "size": [Function],
                                        "title": [Function],
                                      },
                                      "render": [Function],
                                      "styledComponentId": "sc-bwzfXH",
                                      "target": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "defaultProps": Object {
                                          "className": undefined,
                                          "color": "currentColor",
                                          "focusable": false,
                                          "size": "24px",
                                          "title": null,
                                        },
                                        "propTypes": Object {
                                          "className": [Function],
                                          "color": [Function],
                                          "focusable": [Function],
                                          "icon": [Function],
                                          "size": [Function],
                                          "title": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  icon="delete"
                                  p="half"
                                  size="32px"
                                  title={null}
                                >
                                  <ForwardRef
                                    className="sc-bwzfXH bbrsYH"
                                    color="currentColor"
                                    focusable={false}
                                    icon="delete"
                                    p="half"
                                    size="32px"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="sc-bwzfXH bbrsYH"
                                      color="currentColor"
                                      fill="currentColor"
                                      focusable={false}
                                      height="32px"
                                      icon="delete"
                                      p="half"
                                      size="32px"
                                      title={null}
                                      viewBox="0 0 24 24"
                                      width="32px"
                                    >
                                      <path
                                        d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                        key="0"
                                      />
                                    </svg>
                                  </ForwardRef>
                                </StyledComponent>
                              </Styled(Component)>
                            </InnerReference>
                          </Reference>
                          <Popper
                            modifiers={
                              Object {
                                "preventOverflow": Object {
                                  "boundariesElement": "viewport",
                                  "enabled": true,
                                  "padding": 8,
                                },
                              }
                            }
                            placement="bottom"
                          >
                            <InnerPopper
                              eventsEnabled={true}
                              modifiers={
                                Object {
                                  "preventOverflow": Object {
                                    "boundariesElement": "viewport",
                                    "enabled": true,
                                    "padding": 8,
                                  },
                                }
                              }
                              placement="bottom"
                              positionFixed={false}
                              referenceElement={
                                <svg
                                  aria-hidden="true"
                                  class="sc-bwzfXH bbrsYH"
                                  color="currentColor"
                                  fill="currentColor"
                                  focusable="false"
                                  height="32px"
                                  icon="delete"
                                  p="half"
                                  viewBox="0 0 24 24"
                                  width="32px"
                                >
                                  <path
                                    d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                  />
                                </svg>
                              }
                            />
                          </Popper>
                        </Manager>
                        <styled.p
                          color="currentColor"
                          disabled={false}
                          fontSize="16px"
                          inline={false}
                          lineHeight="1.5"
                          m={0}
                          ml="half"
                          mr="half"
                        >
                          <StyledComponent
                            color="currentColor"
                            disabled={false}
                            fontSize="16px"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "_foldedDefaultProps": Object {
                                  "color": "currentColor",
                                  "disabled": false,
                                  "fontSize": "16px",
                                  "inline": false,
                                  "lineHeight": "1.5",
                                  "m": 0,
                                },
                                "attrs": Array [
                                  [Function],
                                ],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-bxivhb",
                                  "isStatic": false,
                                  "lastClassName": "jtAKLH",
                                  "rules": Array [
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                    [Function],
                                  ],
                                },
                                "displayName": "styled.p",
                                "foldedComponentIds": Array [],
                                "propTypes": Object {
                                  "disabled": [Function],
                                  "inline": [Function],
                                },
                                "render": [Function],
                                "styledComponentId": "sc-bxivhb",
                                "target": "p",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            inline={false}
                            lineHeight="1.5"
                            m={0}
                            ml="half"
                            mr="half"
                          >
                            <p
                              className="sc-bxivhb jtAKLH"
                              color="currentColor"
                              disabled={false}
                              fontSize="16px"
                            >
                              Delete
                            </p>
                          </StyledComponent>
                        </styled.p>
                      </button>
                    </StyledComponent>
                  </IconicButton__WrapperButton>
                </ForwardRef>
              </StyledComponent>
            </Styled(Component)>
          </ThemeProvider>
        </div>
      </StyledComponent>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;

exports[`Storyshots IconicButton without a label 1`] = `
<div
  style={
    Object {
      "padding": "24px",
    }
  }
>
  <NDSProvider
    theme={
      Object {
        "borders": Array [],
        "breakpoints": Object {
          "extraLarge": "1920px",
          "extraSmall": "0px",
          "large": "1360px",
          "medium": "1024px",
          "small": "768px",
        },
        "colors": Object {
          "black": "#011e38",
          "blackBlue": "#122b47",
          "blue": "#216beb",
          "darkBlue": "#00438f",
          "darkGrey": "#434d59",
          "green": "#008059",
          "grey": "#c0c8d1",
          "lightBlue": "#e1ebfa",
          "lightGreen": "#e9f7f2",
          "lightGrey": "#e4e7eb",
          "lightRed": "#fae6ea",
          "lightYellow": "#fcf5e3",
          "red": "#cc1439",
          "white": "#ffffff",
          "whiteGrey": "#f0f2f5",
          "yellow": "#ffbb00",
        },
        "fontSizes": Object {
          "large": "20px",
          "larger": "26px",
          "largest": "46px",
          "medium": "16px",
          "small": "14px",
          "smaller": "12px",
        },
        "fontWeights": Object {
          "bold": "600",
          "light": "300",
          "medium": "500",
          "normal": "400",
        },
        "fonts": Object {
          "base": "'IBM Plex Sans', sans-serif",
          "mono": "'IBM Plex Mono', monospace",
        },
        "lineHeights": Object {
          "base": "1.5",
          "sectionTitle": "1.23076923",
          "smallTextBase": "1.71428571",
          "smallTextCompressed": "1.14285714",
          "smallerText": "1.33333333",
          "subsectionTitle": "1.2",
          "title": "1.04347826",
        },
        "radii": Object {
          "circle": "50%",
          "medium": "4px",
          "small": "2px",
        },
        "shadows": Object {
          "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
          "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
          "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
          "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
          "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
        },
        "space": Object {
          "half": "4px",
          "none": "0px",
          "x1": "8px",
          "x2": "16px",
          "x3": "24px",
          "x4": "32px",
          "x5": "40px",
          "x6": "48px",
          "x8": "64px",
        },
        "zIndex": Object {
          "content": 100,
          "overlay": 1000,
          "tabsBar": 210,
          "tabsScollIndicator": 200,
        },
      }
    }
  >
    <GlobalStyleComponent />
    <NDSProvider__GlobalStyles
      theme={
        Object {
          "borders": Array [],
          "breakpoints": Object {
            "extraLarge": "1920px",
            "extraSmall": "0px",
            "large": "1360px",
            "medium": "1024px",
            "small": "768px",
          },
          "colors": Object {
            "black": "#011e38",
            "blackBlue": "#122b47",
            "blue": "#216beb",
            "darkBlue": "#00438f",
            "darkGrey": "#434d59",
            "green": "#008059",
            "grey": "#c0c8d1",
            "lightBlue": "#e1ebfa",
            "lightGreen": "#e9f7f2",
            "lightGrey": "#e4e7eb",
            "lightRed": "#fae6ea",
            "lightYellow": "#fcf5e3",
            "red": "#cc1439",
            "white": "#ffffff",
            "whiteGrey": "#f0f2f5",
            "yellow": "#ffbb00",
          },
          "fontSizes": Object {
            "large": "20px",
            "larger": "26px",
            "largest": "46px",
            "medium": "16px",
            "small": "14px",
            "smaller": "12px",
          },
          "fontWeights": Object {
            "bold": "600",
            "light": "300",
            "medium": "500",
            "normal": "400",
          },
          "fonts": Object {
            "base": "'IBM Plex Sans', sans-serif",
            "mono": "'IBM Plex Mono', monospace",
          },
          "lineHeights": Object {
            "base": "1.5",
            "sectionTitle": "1.23076923",
            "smallTextBase": "1.71428571",
            "smallTextCompressed": "1.14285714",
            "smallerText": "1.33333333",
            "subsectionTitle": "1.2",
            "title": "1.04347826",
          },
          "radii": Object {
            "circle": "50%",
            "medium": "4px",
            "small": "2px",
          },
          "shadows": Object {
            "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
            "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
            "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
            "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
            "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
          },
          "space": Object {
            "half": "4px",
            "none": "0px",
            "x1": "8px",
            "x2": "16px",
            "x3": "24px",
            "x4": "32px",
            "x5": "40px",
            "x6": "48px",
            "x8": "64px",
          },
          "zIndex": Object {
            "content": 100,
            "overlay": 1000,
            "tabsBar": 210,
            "tabsScollIndicator": 200,
          },
        }
      }
    >
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "NDSProvider__GlobalStyles-f28eoq-0",
              "isStatic": false,
              "lastClassName": "gWUgWA",
              "rules": Array [
                [Function],
              ],
            },
            "displayName": "NDSProvider__GlobalStyles",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "NDSProvider__GlobalStyles-f28eoq-0",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
        theme={
          Object {
            "borders": Array [],
            "breakpoints": Object {
              "extraLarge": "1920px",
              "extraSmall": "0px",
              "large": "1360px",
              "medium": "1024px",
              "small": "768px",
            },
            "colors": Object {
              "black": "#011e38",
              "blackBlue": "#122b47",
              "blue": "#216beb",
              "darkBlue": "#00438f",
              "darkGrey": "#434d59",
              "green": "#008059",
              "grey": "#c0c8d1",
              "lightBlue": "#e1ebfa",
              "lightGreen": "#e9f7f2",
              "lightGrey": "#e4e7eb",
              "lightRed": "#fae6ea",
              "lightYellow": "#fcf5e3",
              "red": "#cc1439",
              "white": "#ffffff",
              "whiteGrey": "#f0f2f5",
              "yellow": "#ffbb00",
            },
            "fontSizes": Object {
              "large": "20px",
              "larger": "26px",
              "largest": "46px",
              "medium": "16px",
              "small": "14px",
              "smaller": "12px",
            },
            "fontWeights": Object {
              "bold": "600",
              "light": "300",
              "medium": "500",
              "normal": "400",
            },
            "fonts": Object {
              "base": "'IBM Plex Sans', sans-serif",
              "mono": "'IBM Plex Mono', monospace",
            },
            "lineHeights": Object {
              "base": "1.5",
              "sectionTitle": "1.23076923",
              "smallTextBase": "1.71428571",
              "smallTextCompressed": "1.14285714",
              "smallerText": "1.33333333",
              "subsectionTitle": "1.2",
              "title": "1.04347826",
            },
            "radii": Object {
              "circle": "50%",
              "medium": "4px",
              "small": "2px",
            },
            "shadows": Object {
              "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
              "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
              "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
              "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
              "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
            },
            "space": Object {
              "half": "4px",
              "none": "0px",
              "x1": "8px",
              "x2": "16px",
              "x3": "24px",
              "x4": "32px",
              "x5": "40px",
              "x6": "48px",
              "x8": "64px",
            },
            "zIndex": Object {
              "content": 100,
              "overlay": 1000,
              "tabsBar": 210,
              "tabsScollIndicator": 200,
            },
          }
        }
      >
        <div
          className="NDSProvider__GlobalStyles-f28eoq-0 gWUgWA"
        >
          <ThemeProvider
            theme={
              Object {
                "borders": Array [],
                "breakpoints": Object {
                  "extraLarge": "1920px",
                  "extraSmall": "0px",
                  "large": "1360px",
                  "medium": "1024px",
                  "small": "768px",
                },
                "colors": Object {
                  "black": "#011e38",
                  "blackBlue": "#122b47",
                  "blue": "#216beb",
                  "darkBlue": "#00438f",
                  "darkGrey": "#434d59",
                  "green": "#008059",
                  "grey": "#c0c8d1",
                  "lightBlue": "#e1ebfa",
                  "lightGreen": "#e9f7f2",
                  "lightGrey": "#e4e7eb",
                  "lightRed": "#fae6ea",
                  "lightYellow": "#fcf5e3",
                  "red": "#cc1439",
                  "white": "#ffffff",
                  "whiteGrey": "#f0f2f5",
                  "yellow": "#ffbb00",
                },
                "fontSizes": Object {
                  "large": "20px",
                  "larger": "26px",
                  "largest": "46px",
                  "medium": "16px",
                  "small": "14px",
                  "smaller": "12px",
                },
                "fontWeights": Object {
                  "bold": "600",
                  "light": "300",
                  "medium": "500",
                  "normal": "400",
                },
                "fonts": Object {
                  "base": "'IBM Plex Sans', sans-serif",
                  "mono": "'IBM Plex Mono', monospace",
                },
                "lineHeights": Object {
                  "base": "1.5",
                  "sectionTitle": "1.23076923",
                  "smallTextBase": "1.71428571",
                  "smallTextCompressed": "1.14285714",
                  "smallerText": "1.33333333",
                  "subsectionTitle": "1.2",
                  "title": "1.04347826",
                },
                "radii": Object {
                  "circle": "50%",
                  "medium": "4px",
                  "small": "2px",
                },
                "shadows": Object {
                  "error": "0px 0px 5px 0px rgba(204, 20, 57, .9)",
                  "focus": "0px 0px 5px 0px rgba(33, 107, 235, .9)",
                  "large": "0px 3px 5px 0px rgba(1, 30, 56, 0.1)",
                  "medium": "0px 1px 4px 0px rgba(1, 30, 56, 0.15)",
                  "small": "0px 0px 3px 0px rgba(1, 30, 56, 0.2)",
                },
                "space": Object {
                  "half": "4px",
                  "none": "0px",
                  "x1": "8px",
                  "x2": "16px",
                  "x3": "24px",
                  "x4": "32px",
                  "x5": "40px",
                  "x6": "48px",
                  "x8": "64px",
                },
                "zIndex": Object {
                  "content": 100,
                  "overlay": 1000,
                  "tabsBar": 210,
                  "tabsScollIndicator": 200,
                },
              }
            }
          >
            <Styled(Component)
              icon="delete"
            >
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-gZMcBi",
                      "isStatic": false,
                      "lastClassName": "giNnHm",
                      "rules": Array [],
                    },
                    "displayName": "Styled(Component)",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-gZMcBi",
                    "target": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "defaultProps": Object {
                        "children": null,
                        "className": undefined,
                        "disabled": false,
                        "labelHidden": false,
                      },
                      "propTypes": Object {
                        "children": [Function],
                        "className": [Function],
                        "disabled": [Function],
                        "icon": [Function],
                        "labelHidden": [Function],
                      },
                      "render": [Function],
                    },
                    "toString": [Function],
                    "usesTheme": false,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                icon="delete"
              >
                <ForwardRef
                  className="sc-gZMcBi giNnHm"
                  disabled={false}
                  icon="delete"
                  labelHidden={false}
                >
                  <IconicButton__WrapperButton
                    aria-label={null}
                    className="sc-gZMcBi giNnHm"
                    disabled={false}
                  >
                    <StyledComponent
                      aria-label={null}
                      className="sc-gZMcBi giNnHm"
                      disabled={false}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                            "isStatic": false,
                            "lastClassName": "dmBfBQ",
                            "rules": Array [
                              [Function],
                              [Function],
                            ],
                          },
                          "displayName": "IconicButton__WrapperButton",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "IconicButton__WrapperButton-sc-1u3dojp-1",
                          "target": "button",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <button
                        aria-label={null}
                        className="IconicButton__WrapperButton-sc-1u3dojp-1 dmBfBQ sc-gZMcBi giNnHm"
                        disabled={false}
                      >
                        <Manager>
                          <Reference>
                            <InnerReference
                              setReferenceNode={[Function]}
                            >
                              <Styled(Component)
                                color="currentColor"
                                icon="delete"
                                p="half"
                                size="32px"
                                title={null}
                              >
                                <StyledComponent
                                  color="currentColor"
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "_foldedDefaultProps": Object {
                                        "color": "currentColor",
                                        "size": "24px",
                                        "title": null,
                                      },
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-bwzfXH",
                                        "isStatic": false,
                                        "lastClassName": "bbrsYH",
                                        "rules": Array [
                                          [Function],
                                          [Function],
                                          [Function],
                                        ],
                                      },
                                      "displayName": "Styled(Component)",
                                      "foldedComponentIds": Array [],
                                      "propTypes": Object {
                                        "color": [Function],
                                        "icon": [Function],
                                        "size": [Function],
                                        "title": [Function],
                                      },
                                      "render": [Function],
                                      "styledComponentId": "sc-bwzfXH",
                                      "target": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "defaultProps": Object {
                                          "className": undefined,
                                          "color": "currentColor",
                                          "focusable": false,
                                          "size": "24px",
                                          "title": null,
                                        },
                                        "propTypes": Object {
                                          "className": [Function],
                                          "color": [Function],
                                          "focusable": [Function],
                                          "icon": [Function],
                                          "size": [Function],
                                          "title": [Function],
                                        },
                                        "render": [Function],
                                      },
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={[Function]}
                                  icon="delete"
                                  p="half"
                                  size="32px"
                                  title={null}
                                >
                                  <ForwardRef
                                    className="sc-bwzfXH bbrsYH"
                                    color="currentColor"
                                    focusable={false}
                                    icon="delete"
                                    p="half"
                                    size="32px"
                                    title={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="sc-bwzfXH bbrsYH"
                                      color="currentColor"
                                      fill="currentColor"
                                      focusable={false}
                                      height="32px"
                                      icon="delete"
                                      p="half"
                                      size="32px"
                                      title={null}
                                      viewBox="0 0 24 24"
                                      width="32px"
                                    >
                                      <path
                                        d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                        key="0"
                                      />
                                    </svg>
                                  </ForwardRef>
                                </StyledComponent>
                              </Styled(Component)>
                            </InnerReference>
                          </Reference>
                          <Popper
                            modifiers={
                              Object {
                                "preventOverflow": Object {
                                  "boundariesElement": "viewport",
                                  "enabled": true,
                                  "padding": 8,
                                },
                              }
                            }
                            placement="bottom"
                          >
                            <InnerPopper
                              eventsEnabled={true}
                              modifiers={
                                Object {
                                  "preventOverflow": Object {
                                    "boundariesElement": "viewport",
                                    "enabled": true,
                                    "padding": 8,
                                  },
                                }
                              }
                              placement="bottom"
                              positionFixed={false}
                              referenceElement={
                                <svg
                                  aria-hidden="true"
                                  class="sc-bwzfXH bbrsYH"
                                  color="currentColor"
                                  fill="currentColor"
                                  focusable="false"
                                  height="32px"
                                  icon="delete"
                                  p="half"
                                  viewBox="0 0 24 24"
                                  width="32px"
                                >
                                  <path
                                    d="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                  />
                                </svg>
                              }
                            />
                          </Popper>
                        </Manager>
                      </button>
                    </StyledComponent>
                  </IconicButton__WrapperButton>
                </ForwardRef>
              </StyledComponent>
            </Styled(Component)>
          </ThemeProvider>
        </div>
      </StyledComponent>
    </NDSProvider__GlobalStyles>
  </NDSProvider>
</div>
`;
